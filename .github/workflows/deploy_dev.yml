name: Deploy > DEV

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:   
  build:    
    runs-on: ubuntu-latest   
    env:
      OS: linux
      ARCH: arm64
      NAMESPACE: mimosa
    steps:
    # checkout 
    - name: Checkout 
      uses: actions/checkout@v3

    # https://github.com/actions/setup-go
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
          check-latest: true
          cache: true

    - name: Build Go
      run: |
        go mod download
        CGO_ENABLED=0 GOOS=${{ env.OS }} GOARCH=${{ env.ARCH }} \
          go build -ldflags "-s -w" \
          -o bin/app
    
    # https://github.com/docker/setup-qemu-action
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2   

    # https://github.com/docker/metadata-action
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ghcr.io/${{ github.actor }}/${{ env.NAMESPACE }}-${{ github.event.repository.name }}
        tags: |
            type=ref,event=branch
            type=sha

    # https://github.com/docker/login-action
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GH_TOKEN }}
    
    # https://github.com/docker/build-push-action
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        platforms: ${{ env.OS }}/${{ env.ARCH }}
        labels: ${{ steps.meta.outputs.labels }}
    
    # configure kubectl
    - name: Config kubectl
      uses: tale/kubectl-action@v1
      with:
        # For this method KUBE_CONFIG required.
        # You can find it: cat $HOME/.kube/config | base64
        base64-kube-config: ${{ secrets.KUBE_CONFIG }}

    # https://github.com/benjlevesque/short-sha
    - name: Set short sha
      uses: benjlevesque/short-sha@v1.2
      id: short-sha

    # 修正设置image时找不到image的问题
    # ${{ github.actor }} 可能大些，但registry name全小写
    - name: Prepare registry name
      run: |
        echo ACTOR_LOWER=$(echo ${{ github.actor }} tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

    # Update k8s deployment image
    - name: Deploy
      run: |
        kubectl set image deploy \
          ${{ github.event.repository.name }}-dev-depl \
          *=ghcr.io/${{ env.ACTOR_LOWER }}/${{ env.NAMESPACE }}-${{ github.event.repository.name }}:sha-${{ steps.short-sha.outputs.sha }} \
          -n ${{ env.NAMESPACE }}